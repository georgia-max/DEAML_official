import pandas as pdimport numpy as npimport mathfrom scipy.stats import normfrom scipy import statsimport statsmodels.api as smimport matplotlib.pyplot as plt"Multiple linear regression"dataset = pd.read_csv('dummy_data.csv')df= pd.DataFrame(dataset.iloc[:,1:6].values)# dataset = pd.read_csv('July_20_WS.csv')# df= pd.DataFrame(dataset.iloc[:,8:13].values)z= np.abs(stats.zscore(df))df_out = df[(z<3).all(axis=1)] #delete outliers if Z score is greater than/ less than 3,-3X= df.iloc[:, 0:4].values  #z1,z2,z3,z4y= df.iloc[:,-1].values#.reshape((len(X),1)) #eff#X = sm.add_constant(X)print(np.shape(y))MLR = sm.OLS(y,X).fit()predictions =MLR.predict(X)# use 95 % CI (default setting)print(MLR.summary())print('second',MLR.summary(alpha=0.01))conf_in = MLR.conf_int(alpha=0.05, cols=None)conf_in_B = MLR.conf_int(alpha=0.025, cols=None)conf_in_A = MLR.conf_int(alpha=0.01, cols=None)print(conf_in)print('25',conf_in_B)print('0.01',conf_in_A)plt.scatter(y,predictions,  color='blue')print(MLR.f_pvalue)#plt.plot(X_test, y_pred, color='red', linewidth=2)plt.show()